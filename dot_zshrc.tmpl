{{ if eq .chezmoi.os "darwin" }}
export USR_SHARE="$(brew --prefix)/share"
export ZSH="$HOME/.oh-my-zsh"

plugins=(git sudo) 
source $USR_SHARE/powerlevel10k/powerlevel10k.zsh-theme
source $USR_SHARE/zsh-autosuggestions/zsh-autosuggestions.zsh
source $USR_SHARE/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Aliases
alias psy="brew update &&\
    brew bundle install --cleanup --file=~/.config/Brewfile --no-lock &&\
    brew upgrade"
alias pe="nvim .config/Brewfile && chezmoi re-add"
alias in="brew install"
{{ end }}
{{ if eq .chezmoi.os "linux" }}
export USR_SHARE="/usr/share"
export ZSH="$USR_SHARE/oh-my-zsh"

plugins=(git sudo zsh-256color zsh-autosuggestions zsh-syntax-highlighting)

# Detect the AUR wrapper
if pacman -Qi yay &>/dev/null ; then
   aurhelper="yay"
elif pacman -Qi paru &>/dev/null ; then
   aurhelper="paru"
fi

# Aliases
alias psy='pacdef p sy && pacdef p c && $aurhelper -Sc' # sync package list
alias pe='nvim .config/pacdef/ && chezmoi re-add'
alias pu='$aurhelper -Syu && pacdef p u' # list unmanaged packages
alias pc='$aurhelper -Qtdq | $aurhelper -Rns -' # remove unused packages, also try > $aurhelper -Qqd | $aurhelper -Rsu --print -
alias lspkg='$aurhelper -Qs' # list installed package
function in {
    local pkg="$1"
    if pacman -Syi "$pkg" &>/dev/null ; then
        sudo pacman -S "$pkg"
    else 
        "$aurhelper" -S "$pkg"
    fi
}
{{ end }}
# Common settings

GYATE=${XDG_CONFIG_HOME:-$HOME/.config}/kitty/gyate/

source $USR_SHARE/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme
source $ZSH/oh-my-zsh.sh
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Oh-my-zsh/P10k
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Aliases
alias ls='eza -1   --icons=auto' # short list
alias  l='eza -lh  --icons=auto' # long list
alias ll='eza -lha --icons=auto --sort=name --group-directories-first' # long list all
alias ld='eza -lhD --icons=auto' # long list dirs
alias sudo='sudo ' # always use sudo
alias cz='chezmoi' # chezmoi
alias clr='clear' # clear
alias f='fuck'

alias ..='cd ..'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

alias mkdir='mkdir -p'
#alias ssh='kitten ssh'

function v {
    local file="$1"
        nvim "$file"
        if chezmoi managed | grep -q "$file" ; then
            chezmoi re-add
                fi
}
function nvm {
    unset -f nvm
        export NVM_DIR=~/.nvm
        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
        nvm "$@"
}
function node {
    unset -f node
        export NVM_DIR=~/.nvm
        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
        node "$@"
}
function npm {
    unset -f npm
        export NVM_DIR=~/.nvm
        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
        npm "$@"
}

if [ -z "$SSH_CLIENT" ] || [ -z "$SSH_TTY" ]; then
    fortune | cowsay -f $GYATE/blank.cow -W 80 | dotacat && kitty +kitten icat --align left \
        "$GYATE$(eza -I blank.cow $GYATE | sort -R | tail -1)"
fi
printf '\033]2;%s\033\\' $USER@$HOST/$(uname -s)

eval "$(zoxide init --cmd cd zsh)"
eval "$(thefuck --alias)"
setopt correct
